<!DOCTYPE html>
<html>
    <head>
        <title>Home</title>
        <link
            rel="stylesheet"
            href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/css/bootstrap.min.css"
        />
    </head>
    <body>
        <nav class="navbar navbar-expand-sm navbar-dark bg-dark">
            <div class="container">
                <a class="navbar-brand" href="/index">Home</a>
                <ul class="navbar-nav mr-auto"></ul>
                <ul class="navbar-nav ml-auto">
                    <li class="nav-item">
                        <span id="userName" class="nav-link text-white"></span>
                    </li>
                    <li class="nav-item">
                        <button
                            id="logoutButton"
                            class="btn btn-link text-white"
                        >
                            Log out
                        </button>
                    </li>
                </ul>
            </div>
        </nav>

        <div class="container mt-3">
            <div class="row justify-content-center">
                <div class="col-md-6">
                    <div
                        class="d-flex justify-content-start align-items-center mb-3"
                    >
                        <button
                            id="addProjectButton"
                            class="btn btn-primary"
                            data-toggle="modal"
                            data-target="#addProjectModal"
                        >
                            Add Project
                        </button>
                    </div>
                    <h4>Projects</h4>
                    <div id="projectList" class="mt-3">
                        <!-- Projects will be dynamically added here -->
                    </div>
                </div>
            </div>
        </div>

        <!-- Modal -->
        <div
            class="modal fade"
            id="addProjectModal"
            tabindex="-1"
            role="dialog"
            aria-labelledby="addProjectModalLabel"
            aria-hidden="true"
        >
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addProjectModalLabel">
                            Add Project
                        </h5>
                        <input type="hidden" id="projectId" />
                        <button
                            type="button"
                            class="close"
                            data-dismiss="modal"
                            aria-label="Close"
                        >
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <form id="addProjectForm">
                            <div class="form-group">
                                <label for="projectName">Title</label>
                                <input
                                    type="text"
                                    class="form-control"
                                    id="projectName"
                                    placeholder="Enter project title"
                                    required
                                    minlength="1"
                                    maxlength="100"
                                />
                            </div>
                            <div class="form-group">
                                <label for="projectDescription"
                                    >Description</label
                                >
                                <textarea
                                    class="form-control"
                                    id="projectDescription"
                                    rows="3"
                                    placeholder="Enter project description"
                                    minlength="1"
                                    maxlength="100"
                                ></textarea>
                            </div>
                            <div class="form-group">
                                <label for="dueDate">Due Date (Optional)</label>
                                <input
                                    type="date"
                                    class="form-control"
                                    id="dueDate"
                                />
                            </div>
                            <div class="form-group">
                                <label for="priority">Priority</label>
                                <select class="form-control" id="priority">
                                    <option value="High">High</option>
                                    <option value="Medium" selected>
                                        Medium
                                    </option>
                                    <option value="Low">Low</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label for="status">Status</label>
                                <select class="form-control" id="status">
                                    <option value="Open" selected>Open</option>
                                    <option value="Closed">Closed</option>
                                </select>
                            </div>
                            <button type="submit" class="btn btn-primary">
                                Add
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        </div>

        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.0/js/bootstrap.min.js"></script>

        <script>
            // Get the "Add Project" button element
            var addProjectButton = document.getElementById("addProjectButton");

            // Add event listener to the button
            addProjectButton.addEventListener("click", function () {
                // Call the clearModalFields() function
                clearModalFields();
            });

            function getCookie(name) {
                const cookieValue = document.cookie
                    .split(";")
                    .map((cookie) => cookie.split("="))
                    .reduce((acc, [key, value]) => {
                        acc[key.trim()] = decodeURIComponent(value.trim());
                        return acc;
                    }, {});

                return cookieValue[name] || "";
            }

            const token = getCookie("token");
            const userId = getCookie("userId");
            if (!token) {
                window.location.href = "/login";
            }

            const logoutButton = document.getElementById("logoutButton");
            logoutButton.addEventListener("click", function () {
                document.cookie =
                    "token=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/; SameSite=None; Secure";
                window.location.href = "/login";
            });

            const addProjectForm = document.getElementById("addProjectForm");
            addProjectForm.addEventListener("submit", function (event) {
                event.preventDefault();

                const projectName =
                    document.getElementById("projectName").value;
                const projectDescription =
                    document.getElementById("projectDescription").value;
                const dueDate = document.getElementById("dueDate").value;
                const priority = document.getElementById("priority").value;
                const status = document.getElementById("status").value;

                const projectId = document.getElementById("projectId").value;

                const newProject = {
                    name: projectName,
                    description: projectDescription,
                    createdBy: userId.toString(),
                    priority: priority,
                    status: status,
                };

                if (dueDate) {
                    newProject.dueDate = dueDate;
                }

                if (projectId) {
                    // Modify an existing project
                    const xhr = new XMLHttpRequest();
                    xhr.open(
                        "PUT",
                        `http://localhost:3000/projects/${projectId}`
                    );
                    xhr.setRequestHeader("Content-Type", "application/json");
                    xhr.setRequestHeader("Authorization", token);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === XMLHttpRequest.DONE) {
                            if (xhr.status === 200) {
                                console.log("Project modified successfully");
                                window.location.reload(); // Refresh the page
                            } else {
                                console.error(
                                    "Error modifying project:",
                                    xhr.status
                                );
                                // Optionally, you can handle the error and display an error message to the user
                            }
                        }
                    };
                    xhr.send(JSON.stringify(newProject));
                } else {
                    // Add a new project
                    const xhr = new XMLHttpRequest();
                    xhr.open("POST", "/projects");
                    xhr.setRequestHeader("Content-Type", "application/json");
                    xhr.setRequestHeader("Authorization", token);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === XMLHttpRequest.DONE) {
                            if (xhr.status === 201) {
                                console.log("Project added successfully");
                                window.location.reload(); // Refresh the page
                            } else {
                                console.error(
                                    "Error adding project:",
                                    xhr.status
                                );
                                // Optionally, you can handle the error and display an error message to the user
                            }
                        }
                    };
                    xhr.send(JSON.stringify(newProject));
                }
            });

            function modifyProject(projectId) {
                const addProjectModalLabel = document.getElementById(
                    "addProjectModalLabel"
                );
                addProjectModalLabel.textContent = "Modify Project";

                const projectIdInput = document.getElementById("projectId");
                projectIdInput.value = projectId;

                const submitButton = document.querySelector(
                    ".modal-body button[type='submit']"
                );
                submitButton.textContent = "Modify";

                // Fetch the project data using the project ID
                const xhr = new XMLHttpRequest();
                xhr.open("GET", `http://localhost:3000/projects/${projectId}`);
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.setRequestHeader("Authorization", token);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === XMLHttpRequest.DONE) {
                        if (xhr.status === 200) {
                            const project = JSON.parse(xhr.responseText);

                            // Prepopulate the form fields with the project data
                            document.getElementById("projectName").value =
                                project.data.project.name || "";
                            document.getElementById(
                                "projectDescription"
                            ).value = project.data.project.description || "";
                            document.getElementById("dueDate").value = project
                                .data.project.dueDate
                                ? project.data.project.dueDate.split("T")[0]
                                : "";
                            document.getElementById("priority").value =
                                project.data.project.priority || "";
                            document.getElementById("status").value =
                                project.data.project.status || "";

                            // Show the modal
                            $("#addProjectModal").modal("show");
                        } else {
                            console.error(
                                "Error fetching project:",
                                xhr.status
                            );
                            // Optionally, you can handle the error and display an error message to the user
                        }
                    }
                };
                xhr.send();
            }

            function deleteProject(projectId) {
                // Show confirmation modal
                if (confirm("Are you sure you want to delete this project?")) {
                    const xhr = new XMLHttpRequest();
                    xhr.open(
                        "DELETE",
                        `http://localhost:3000/projects/${projectId}`
                    );
                    xhr.setRequestHeader("Content-Type", "application/json");
                    xhr.setRequestHeader("Authorization", token);
                    xhr.onreadystatechange = function () {
                        if (xhr.readyState === XMLHttpRequest.DONE) {
                            if (xhr.status === 200) {
                                console.log("Project deleted successfully");
                                fetchProjects(); // Refresh the project list after deletion
                            } else {
                                console.error(
                                    "Error deleting project:",
                                    xhr.status
                                );
                                // Optionally, you can handle the error and display an error message to the user
                            }
                        }
                    };
                    xhr.send();
                }
            }

            function fetchProjects() {
                const xhr = new XMLHttpRequest();
                xhr.open(
                    "GET",
                    `http://localhost:3000/projects/user?createdBy=${userId}`
                );
                xhr.setRequestHeader("Content-Type", "application/json");
                xhr.setRequestHeader("Authorization", token);
                xhr.onreadystatechange = function () {
                    if (xhr.readyState === XMLHttpRequest.DONE) {
                        if (xhr.status === 200) {
                            let projects = JSON.parse(xhr.responseText);

                            // Sort the projects by status (Open first) and then by title (A-Z)
                            projects.data.projects.sort((a, b) => {
                                // Sort by status (Open first)
                                if (
                                    a.status === "Open" &&
                                    b.status === "Closed"
                                )
                                    return -1;
                                if (
                                    a.status === "Closed" &&
                                    b.status === "Open"
                                )
                                    return 1;

                                // If statuses are the same, sort by title (A-Z)
                                if (a.name.toLowerCase() < b.name.toLowerCase())
                                    return -1;
                                if (a.name.toLowerCase() > b.name.toLowerCase())
                                    return 1;

                                return 0;
                            });

                            console.log(projects);

                            const projectList =
                                document.getElementById("projectList");

                            // Clear existing project cards
                            projectList.innerHTML = "";

                            // Create a card for each project
                            projects.data.projects.forEach((project) => {
                                const projectCard =
                                    document.createElement("div");
                                projectCard.classList.add("card", "mb-3");

                                const projectCardBody =
                                    document.createElement("div");
                                projectCardBody.classList.add("card-body");

                                const projectName =
                                    document.createElement("h5");
                                projectName.classList.add("card-title");
                                projectName.textContent = project.name;

                                const projectDescription =
                                    document.createElement("p");
                                projectDescription.classList.add("card-text");
                                projectDescription.textContent =
                                    project.description;

                                const projectDueDate =
                                    document.createElement("p");
                                projectDueDate.classList.add("card-text");
                                if (project.dueDate) {
                                    const dueDate = new Date(project.dueDate);
                                    const formattedDueDate = dueDate
                                        .toISOString()
                                        .split("T")[0];
                                    projectDueDate.textContent =
                                        "Due Date: " + formattedDueDate;
                                }

                                const projectStatus =
                                    document.createElement("p");
                                projectStatus.classList.add("card-text");

                                // Set status and color based on "Open" or "Closed"
                                projectStatus.textContent = project.status;
                                if (project.status === "Open") {
                                    projectStatus.style.color = "green";
                                } else {
                                    projectStatus.style.color = "red";
                                }

                                const tasksButton =
                                    document.createElement("button");
                                tasksButton.classList.add(
                                    "btn",
                                    "btn-secondary",
                                    "mr-2"
                                );
                                tasksButton.textContent = "Tasks";
                                tasksButton.addEventListener(
                                    "click",
                                    function () {
                                        // Get the project ID
                                        const projectId = project._id;

                                        // Save the project ID as a cookie
                                        document.cookie = `selectedProjectId=${projectId}; path=/`;

                                        // Create a new XHR object
                                        const xhr = new XMLHttpRequest();

                                        // Set up the XHR request
                                        xhr.open(
                                            "GET",
                                            `tasks/project?projectId=${projectId}`
                                        );
                                        xhr.setRequestHeader(
                                            "Content-Type",
                                            "application/json"
                                        );
                                        xhr.setRequestHeader(
                                            "Authorization",
                                            getCookie("token")
                                        ); // Add the Authorization header

                                        // Handle the response
                                        xhr.onreadystatechange = function () {
                                            if (
                                                xhr.readyState ===
                                                XMLHttpRequest.DONE
                                            ) {
                                                if (xhr.status === 200) {
                                                    // Redirect to the "/tasks" page
                                                    window.location.href = `/tasks`;
                                                } else {
                                                    // Handle the error or redirect to the login page
                                                    window.location.href =
                                                        "/login";
                                                }
                                            }
                                        };

                                        // Send the XHR request
                                        xhr.send();
                                    }
                                );

                                const modifyButton =
                                    document.createElement("button");
                                modifyButton.classList.add(
                                    "btn",
                                    "btn-primary",
                                    "mr-2"
                                );

                                modifyButton.textContent = "Modify";
                                modifyButton.addEventListener(
                                    "click",
                                    function () {
                                        modifyProject(project._id);
                                    }
                                );

                                const deleteButton =
                                    document.createElement("button");
                                deleteButton.classList.add("btn", "btn-danger");
                                deleteButton.textContent = "Delete";
                                deleteButton.addEventListener(
                                    "click",
                                    function () {
                                        deleteProject(project._id);
                                    }
                                );

                                projectCardBody.appendChild(projectName);
                                projectCardBody.appendChild(projectDescription);
                                if (project.dueDate) {
                                    projectCardBody.appendChild(projectDueDate);
                                }
                                projectCardBody.appendChild(projectStatus);
                                projectCardBody.appendChild(tasksButton);
                                projectCardBody.appendChild(modifyButton);
                                projectCardBody.appendChild(deleteButton);
                                projectCard.appendChild(projectCardBody);
                                projectList.appendChild(projectCard);
                            });
                        } else {
                            console.error(
                                "Error fetching projects:",
                                xhr.status
                            );
                            // Optionally, you can handle the error and display an error message to the user
                        }
                    }
                };
                xhr.send();
            }

            // Call the fetchProjects function when the page loads
            document.addEventListener("DOMContentLoaded", function () {
                fetchProjects();
            });

            function clearModalFields() {
                document.getElementById("projectName").value = "";
                document.getElementById("projectDescription").value = "";
                document.getElementById("dueDate").value = "";
                document.getElementById("priority").selectedIndex = 1;
                document.getElementById("status").selectedIndex = 0;
            }
        </script>
    </body>
</html>
